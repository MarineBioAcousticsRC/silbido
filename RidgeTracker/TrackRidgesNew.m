function TT=TrackRidgesNew(A,minLen)
% TrackRidgesNew
%
% Follows the zero-crossings of the functional matrix A.  Performs a
% zero-crossing track starting from each interesting (non-NaN) point in A.
%
% Input:
%   A - Matrix generated by HessianFunctional2.  Contains real values and
%       NaNs.  We will follow the lines between positive and negative real
%       values.
%   minLen - Minimum length of line to be considered as valid.
%
% Output:
%   TT - Cell array of ridges.
%

if nargin<2
    minLen=6;
end

% Find the pixels to process
f=find(~isnan(A));
% Convert the indices to subscripts
[y,x]=ind2sub(size(A),f);

% Track from EACH interesting pixel.  The track will be aborted if that
% region has already been processed, though.
k=0;
for n=1:length(x)
    % Track from this point and update A (processed pixels will be flagged
    % as NaN so they don't get processed again).
    [z,A]=TrackZeroCrossFromPointNew(A,x(n),y(n));
    % If the ridge resulting from this starting point is long enough, save
    % it.
    if size(z,1)>=minLen
        k=k+1;
        TT{k}=z;
    end
end
